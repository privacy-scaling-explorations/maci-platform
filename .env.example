# Storage for metadata
# Create a Blob database and get token here: https://vercel.com/dashboard/stores?type=blob
BLOB_READ_WRITE_TOKEN=

# ---------------------
# NETWORK CONFIGURATION
# ---------------------

# Must be one of: ethereum, optimism, optimismSepolia, arbitrum, linea, sepolia, baseGoerli
# Supported networks found here: https://docs.attest.sh/docs/quick--start/contracts
# NEXT_PUBLIC_CHAIN_NAME=optimism
NEXT_PUBLIC_CHAIN_NAME=optimismSepolia

# EAS GraphQL API URL
# Find the URLs here: https://docs.attest.sh/docs/developer-tools/api
NEXT_PUBLIC_EASSCAN_URL=https://optimism-sepolia.easscan.org/graphql
# NEXT_PUBLIC_EASSCAN_URL=https://optimism.easscan.org/graphql

# Optional but highly recommended
# Get your key at: https://dashboard.alchemy.com
# https://docs.alchemy.com/docs/alchemy-quickstart-guide#1key-create-an-alchemy-key
NEXT_PUBLIC_ALCHEMY_ID=

# WalletConnect (optional to support more wallets)
# Get your projectId at https://cloud.walletconnect.com
NEXT_PUBLIC_WALLETCONNECT_ID=
# NEXT_PUBLIC_WALLETCONNECT_ID="21fef48091f12692cad574a6f7753643" # https://github.com/rainbow-me/rainbowkit/blob/d68813501e40363f76856f7471552c83c08f7606/packages/rainbowkit/src/wallets/getWalletConnectConnector.ts#L73


# -----------------
# APP CONFIGURATION
# -----------------

# What the message will say when you sign in with the wallet
NEXT_PUBLIC_SIGN_STATEMENT="Sign in to MACI-RPGF"

# Event title for the round, just for display
NEXT_PUBLIC_EVENT_NAME="ETH GLOBAL"

# Unique identifier for your applications and lists - your app will group attestations by this id
NEXT_PUBLIC_ROUND_ID="open-rpgf-1"
# Event title for the round, just for display
NEXT_PUBLIC_ROUND_ORGANIZER="PSE"

# Name of the token you want to allocate (only updates UI)
NEXT_PUBLIC_TOKEN_NAME="Votes"

# Voting periods
# Determine when users can register applications, admins review them, voters vote, and results are published
NEXT_PUBLIC_START_DATE=2024-01-01T00:00:00.000Z
NEXT_PUBLIC_REGISTRATION_END_DATE=2024-01-01T00:00:00.000Z
NEXT_PUBLIC_REVIEW_END_DATE=2024-01-01T00:00:00.000Z
NEXT_PUBLIC_RESULTS_DATE=2024-01-01T00:00:00.000Z

# Collect user feedback. Is shown as a link when user has voted
NEXT_PUBLIC_FEEDBACK_URL=https://github.com/privacy-scaling-explorations/maci-rpgf/issues/new?title=Feedback

# address that will approve applications and voters
# (leaving empty means anyone can do this)
NEXT_PUBLIC_ADMIN_ADDRESS=

# -----------------
# EAS CONFIGURATION
# -----------------

# Set to true to let anyone vote without an approval attestation
NEXT_PUBLIC_SKIP_APPROVED_VOTER_CHECK=false

# Schema for approved applications and voters
# (optional)
NEXT_PUBLIC_APPROVAL_SCHEMA=0x858e0bc94997c072d762d90440966759b57c8bca892d4c9447d2eeb205f14c69

# Schema for storing metadata refs (projects, lists, profiles, ...)
# (optional)
NEXT_PUBLIC_METADATA_SCHEMA=0xd00c966351896bd3dc37d22017bf1ef23165f859d7546a2aba12a01623dec912

# Used when creating attestations - change these if you're not on Optimism
# More info here: https://docs.attest.sh/docs/quick--start/contracts
NEXT_PUBLIC_EAS_CONTRACT_ADDRESS=0x4200000000000000000000000000000000000021
NEXT_PUBLIC_EAS_SCHEMA_REGISTRY_ADDRESS=0x4200000000000000000000000000000000000020


# ----------------------
# Advanced Configuration
# ----------------------

# You can register schemas by running the script: npm run eas:registerSchemas
# Do this if the schemas doesn't exist on the network you're using.
WALLET_PRIVATE_KEY=""

NEXT_PUBLIC_MACI_ADDRESS=

NEXT_PUBLIC_MACI_START_BLOCK=

NEXT_PUBLIC_MACI_SUBGRAPH_URL=

# URL with tally-{pollId}.json hosted
NEXT_PUBLIC_TALLY_URL=https://upblxu2duoxmkobt.public.blob.vercel-storage.com

# Whether the poll is in qv or non qv mode
NEXT_PUBLIC_POLL_MODE="non-qv"

NEXT_PUBLIC_ROUND_LOGO="round-logo.png"
