name: E2E
on:
  workflow_dispatch:

  schedule:
    - cron: "0 9 * * *" # run every day at 9:00 UTC

  push:
    branches: [main]
  pull_request:

env:
  NEXT_PUBLIC_FEEDBACK_URL: ${{ secrets.NEXT_PUBLIC_FEEDBACK_URL }}
  NEXT_PUBLIC_MACI_START_BLOCK: ${{ secrets.NEXT_PUBLIC_MACI_START_BLOCK }}
  NEXT_PUBLIC_MACI_SUBGRAPH_URL: ${{ secrets.NEXT_PUBLIC_MACI_SUBGRAPH_URL }}
  NEXT_PUBLIC_TOKEN_NAME: ${{ secrets.NEXT_PUBLIC_TOKEN_NAME }}
  NEXT_PUBLIC_MAX_VOTES_TOTAL: ${{ secrets.NEXT_PUBLIC_MAX_VOTES_TOTAL }}
  NEXT_PUBLIC_MAX_VOTES_PROJECT: ${{ secrets.NEXT_PUBLIC_MAX_VOTES_PROJECT }}
  BLOB_READ_WRITE_TOKEN: ${{ secrets.BLOB_READ_WRITE_TOKEN }}
  NEXT_PUBLIC_ALCHEMY_ID: ${{ secrets.NEXT_PUBLIC_ALCHEMY_ID }}
  NEXT_PUBLIC_START_DATE: ${{ secrets.NEXT_PUBLIC_START_DATE }}
  NEXT_PUBLIC_REGISTRATION_END_DATE: ${{ secrets.NEXT_PUBLIC_REGISTRATION_END_DATE }}
  NEXT_PUBLIC_REVIEW_END_DATE: ${{ secrets.NEXT_PUBLIC_REVIEW_END_DATE }}
  NEXT_PUBLIC_VOTING_END_DATE: ${{ secrets.NEXT_PUBLIC_VOTING_END_DATE }}
  NEXT_PUBLIC_RESULTS_DATE: ${{ secrets.NEXT_PUBLIC_RESULTS_DATE }}
  TEST_MNEMONIC: ${{ secrets.TEST_MNEMONIC }}

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        node-version: [20]

    timeout-minutes: 120
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "pnpm"

      - name: Cache node modules
        uses: actions/cache@v4
        continue-on-error: true
        with:
          path: |
            ~/.pnpm-store
            node_modules
            /home/runner/.cache/Cypress
          key: ${{ runner.os }}-node-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Get installed Playwright version
        id: playwright-version
        run: echo "PLAYWRIGHT_VERSION=$(node -e "console.log(require('./package.json').devDependencies['@playwright/test'])")" >> $GITHUB_ENV

      - name: Install dependencies
        run: |-
          pnpm install --frozen-lockfile --prefer-offline

      - name: Install Playwright Browsers
        if: steps.playwright-cache.outputs.cache-hit != 'true'
        run: |-
          pnpm run install:chromium
        working-directory: packages/interface

      - name: Copy .env.example to .env
        run: |
          cp .env.example .env
        working-directory: packages/interface

      - name: Build
        run: pnpm run build

      - name: Run Playwright tests
        uses: coactions/setup-xvfb@6b00cf1889f4e1d5a48635647013c0508128ee1a
        with:
          run: pnpm run test:e2e
          working-directory: packages/interface

      - uses: actions/upload-artifact@v4
        if: always()
        continue-on-error: true
        with:
          name: playwright-report
          path: ./playwright-report/
          retention-days: 30
